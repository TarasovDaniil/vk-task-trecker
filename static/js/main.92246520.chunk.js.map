{"version":3,"sources":["store/consts.js","store/actions/gameAction.js","components/GamePlacement/GamePlacement.js","components/GenerateFigure/GameObjects.js","components/GenerateFigure/GenerateFigure.js","components/Ganarator/Generator.js","panels/Home.js","img/persik.png","panels/Persik.js","App.js","store/reducers/gameReducer.js","store/reducers/rootReducer.js","store/store.js","index.js"],"names":["TOTAL_BLOCK_SIZE","CHANGE_POSITION","SET_POSITION","SET_MODE","changePosition","position","matrix","type","mode","setMode","GamePlacement","useState","Array","map","fill","state","color","gameMatrix","setGameMatrix","ref","useRef","sizeCube","setSizeCube","margin","setMargin","useSelector","game","dispatch","useDispatch","clearMatrix","val","value","useEffect","width","current","clientWidth","size","mrg","setSizeBlock","start","getBoundingClientRect","xIndex","Math","round","x","yIndex","y","mat","isOut","forEach","idx","str","index","block","verticalFill","horizontalFill","undefined","checkLines","className","style","marginTop","marginLeft","height","background","boxShadow","figures","colors","GenerateFigure","figure","isShow","fig","setFig","clr","setClr","isTouch","setIsTouch","setPosition","setStart","setWidth","setHeight","child","setChild","maxLength","length","maxCount","console","log","cubeSize","cubeMargin","totalSize","totalMargin","marginRight","getRootRef","el","bot","onMove","e","shiftX","shiftY","onEnd","setPositionMatrix","onStart","transform","top","left","Generator","genObject","setGenObject","getRandomInt","max","floor","random","obj","object","checkObjectShow","Home","id","go","fetchedUser","Persik","props","onClick","data-to","src","persik","alt","App","activePanel","setActivePanel","currentTarget","dataset","to","popout","rootReducer","combineReducers","action","store","createStore","bridge","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92246520.chunk.js","sourcesContent":["export const TOTAL_BLOCK_SIZE = 'TOTAL_BLOCK_SIZE';\nexport const CHANGE_POSITION = 'CHANGE_POSITION';\nexport const SET_POSITION = 'SET_POSITION';\nexport const SET_MODE = 'SET_MODE';","import {CHANGE_POSITION, SET_MODE, SET_POSITION, TOTAL_BLOCK_SIZE} from \"../consts\";\n\nexport const setSizeBlock = (size, margin) => {\n    return {\n        type: TOTAL_BLOCK_SIZE,\n        size: size,\n        margin: margin\n    }\n}\n\nexport const changePosition = (position, matrix) => {\n    return{\n        type: CHANGE_POSITION,\n        position,\n        matrix,\n        mode: 'move'\n    }\n}\n\nexport const setPositionMatrix = (position, matrix, color, index) => {\n    return {\n        type: SET_POSITION,\n        position,\n        matrix,\n        color,\n        index,\n        mode: 'end'\n    }\n}\n\nexport const setMode = (mode) => {\n    return{\n        type: SET_MODE,\n        mode\n    }\n}","import React, {useEffect, useRef, useState} from 'react';\nimport './style.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setMode, setSizeBlock} from \"../../store/actions/gameAction\";\n\nconst GamePlacement = () => {\n\n    const [gameMatrix, setGameMatrix] = useState([...Array(8)].map(() => Array(8).fill({\n        state : 'empty',\n        color: '#c4c4c4'\n    })));\n    const ref = useRef();\n    const [sizeCube, setSizeCube] = useState(0);\n    const [margin, setMargin] = useState(0);\n    const position = useSelector(state => state.game.position);\n    const matrix = useSelector(state => state.game.matrix);\n    const color = useSelector(state => state.game.color);\n    const mode = useSelector(state => state.game.mode);\n    const dispatch = useDispatch();\n\n    const clearMatrix = (matrix) => {\n        return matrix.map((val) => {\n            return val.map((value) => {\n                if (value.state === 'hover') {\n                    return {\n                        state: 'empty',\n                        color: '#c4c4c4'\n                    };\n                }\n                return value;\n            });\n        });\n    }\n\n    const checkLines = (matrix) => {\n        let verticalFill = [];\n        let horizontalFill = [];\n\n        matrix.forEach((val, idx) => {\n            verticalFill[idx] = true;\n\n            val.forEach((value, index) => {\n                verticalFill[idx] = verticalFill[idx] && value.state === 'fill';\n                if(horizontalFill[index] !== undefined){\n                    horizontalFill[index] = horizontalFill[index] && value.state === 'fill';\n                }else{\n                    horizontalFill[index] = value.state === 'fill';\n                }\n            });\n        });\n        let newMatrix = matrix.map((val, idx) => {\n            return val.map((value, index) => {\n                if(verticalFill[idx] || horizontalFill[index]){\n                    return {\n                        state : 'empty',\n                        color: '#c4c4c4'\n                    }\n                }\n                return value;\n            });\n        });\n        return newMatrix;\n    }\n\n    useEffect(() => {\n        let width = ref.current.clientWidth;\n\n        let size = width * 0.9 / 8;\n        let mrg = width * 0.1 / 8;\n\n        setSizeCube(size);\n        setMargin(mrg);\n        dispatch(setSizeBlock(size, mrg));\n    }, []);\n\n    useEffect(() => {\n        if(matrix && position) {\n            let start = ref.current.getBoundingClientRect();\n\n            let xIndex = Math.round((position[0] - start.x) / (sizeCube + margin));\n            let yIndex = Math.round((position[1] - start.y) / (sizeCube + margin));\n\n            let mat = clearMatrix(gameMatrix);\n\n            let isOut = false;\n            matrix.forEach((val, idx) => {\n                let str = mat[yIndex + idx];\n                if (str) {\n                    val.forEach((value, index) => {\n                        let block = str[xIndex + index];\n                        if(block) {\n                            if (value) {\n                                if(mode === 'move') {\n                                    if (block.state === 'empty') {\n                                        mat[yIndex + idx][xIndex + index] = {\n                                            state: 'hover',\n                                            color: '#717171'\n                                        }\n                                    }else{\n                                        isOut = true;\n                                    }\n                                }else if(mode === 'end'){\n                                    if (block.state === 'empty') {\n                                        mat[yIndex + idx][xIndex + index] = {\n                                            state: 'fill',\n                                            color: color\n                                        }\n                                    }else{\n                                        isOut = true;\n                                    }\n                                }\n                            }\n                        }else{\n                            isOut = true;\n                        }\n                    });\n                }else{\n                    isOut = true;\n                }\n            });\n            if(isOut){\n                setGameMatrix(clearMatrix(gameMatrix));\n            } else {\n                if(mode === 'end'){\n                    setGameMatrix(checkLines(mat));\n                    dispatch(setMode('change'));\n                }else{\n                    setGameMatrix(mat);\n                }\n            }\n\n        }\n    }, [position, matrix]);\n\n    return(\n        <div ref={ref} className=\"game-matrix\">\n            {gameMatrix.map((val, index) => {\n                return(<div className=\"str-blocks\" key={index} style={{\n                    marginTop: margin\n                }}>\n                    {val.map((value, idx) => {\n                        return(<div className=\"block\" key={idx} style={{\n                            marginLeft: margin,\n                            width: sizeCube,\n                            height: sizeCube,\n                            background: value.color,\n                            boxShadow: value.state === 'fill' ? '2px 2px 14px rgba(0, 0, 0, 0.5)' : null\n                        }}/>);\n                    })}\n                </div>);\n            })}\n        </div>\n    );\n};\n\nexport default GamePlacement;","\nexport let figures = [\n    {\n        matrix: [\n            [true]\n        ]\n    },\n    {\n        matrix: [\n            [true, true]\n        ]\n    },\n    {\n        matrix: [\n            [true],\n            [true]\n        ]\n    },\n    {\n        matrix: [\n            [true, true, true]\n        ]\n    },\n    {\n        matrix: [\n            [true],\n            [true],\n            [true]\n        ]\n    },\n    {\n        matrix: [\n            [true, true, true, true]\n        ]\n    },\n    {\n        matrix: [\n            [true],\n            [true],\n            [true],\n            [true]\n        ]\n    },\n    {\n        matrix: [\n            [true, true],\n            [true, true]\n        ]\n    },\n    {\n        matrix: [\n            [true, true, true],\n            [true, false, false],\n            [true, false, false]\n        ]\n    },\n    {\n        matrix: [\n            [true, true, true],\n            [false, false, true],\n            [false, false, true]\n        ]\n    },\n    {\n        matrix: [\n            [true, false, false],\n            [true, false, false],\n            [true, true, true]\n        ]\n    },\n    {\n        matrix: [\n            [false, false, true],\n            [false, false, true],\n            [true, true, true]\n        ]\n    },\n    {\n        matrix: [\n            [true, true],\n            [true, false]\n        ]\n    },\n    {\n        matrix: [\n            [true, true],\n            [false, true]\n        ]\n    },\n    {\n        matrix: [\n            [true, false],\n            [true, true]\n        ]\n    },\n    {\n        matrix: [\n            [false, true],\n            [true, true]\n        ]\n    }\n];\n\nexport let colors = [\n    '#3f8ae0',\n    '#4bb34b',\n    '#ffa000',\n    '#735ce6',\n    '#ff3347',\n    '#792ec0'\n];","import React, {useEffect, useRef, useState} from \"react\";\nimport {figures, colors} from \"./GameObjects\";\nimport './style.css';\nimport {Touch} from \"@vkontakte/vkui\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changePosition, setPositionMatrix} from \"../../store/actions/gameAction\";\n\nconst GenerateFigure = ({figure, color, style, isShow, index}) => {\n\n    const [fig, setFig] = useState(figures[figure]);\n    const [clr, setClr] = useState(colors[color]);\n    const [isTouch, setIsTouch] = useState(false);\n    const [sizeCube, setSizeCube] = useState(0);\n    const size = useSelector(state => state.game.size);\n    const mrg = useSelector(state => state.game.margin);\n    const [margin, setMargin] = useState(0);\n    const [position, setPosition] = useState([0,0]);\n    const [start, setStart] = useState([0,0]);\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n    const [child, setChild] = useState(null);\n    const dispatch = useDispatch();\n    const ref = useRef();\n\n    const onStart = (e) => {\n        //setStart([e.startX, e.startY]);\n        setPosition([start[0], start[1]]);\n        dispatch(changePosition([start[0], start[1]], fig.matrix));\n        console.log('start', [start[0], start[1]]);\n        setIsTouch(true);\n    }\n\n    const onMove = (e) => {\n        setPosition([start[0] + e.shiftX - (width / 2), start[1] + e.shiftY - (height / 2)]);\n        dispatch(changePosition([start[0] + e.shiftX - (width / 2), start[1] + e.shiftY - (height / 2)], fig.matrix));\n    };\n\n    const onEnd = (e) => {\n        setIsTouch(false);\n        dispatch(setPositionMatrix([start[0] + e.shiftX - (width / 2), start[1] + e.shiftY - (height / 2)], fig.matrix, clr, index));\n        console.log('end');\n    }\n\n    const getRootRef = (el) => {\n        if(el) {\n            let bot = el.getBoundingClientRect();\n            console.log(el.getBoundingClientRect());\n            setStart([bot.x, bot.y]);\n        }\n    };\n\n    useEffect(() => {\n        setFig(figures[figure]);\n        setClr(colors[color]);\n    }, [figure, color]);\n\n    useEffect(() => {\n        let maxLength = fig.matrix.length > fig.matrix[0].length ? fig.matrix.length : fig.matrix[0].length;\n        let maxCount = fig.matrix.length;\n        if(!isTouch) {\n            console.log(maxLength, style);\n\n            let cubeSize = maxLength > 1 ? style.width * 0.9 / maxLength : style.width;\n            let cubeMargin = maxLength > 1 ? style.width * 0.1 / maxLength - 1 : 0;\n\n            let totalSize = cubeSize > size ? size : cubeSize;\n            let totalMargin = cubeMargin > mrg ? mrg : cubeMargin;\n\n            setSizeCube(totalSize);\n            setMargin(totalMargin);\n            setWidth((totalMargin * (fig.matrix[0].length - 1)) + (totalSize * fig.matrix[0].length));\n            setHeight((totalMargin * (maxCount - 1)) + (totalSize * maxCount));\n        }else{\n            setSizeCube(size);\n            setMargin(mrg);\n            setWidth((mrg * (fig.matrix[0].length - 1)) + (size * fig.matrix[0].length));\n            setHeight((mrg * (maxCount - 1)) + (size * maxCount));\n        }\n    }, [fig, style, size, mrg, isTouch]);\n\n    useEffect(() => {\n\n        console.log(start, position);\n    }, [start, position]);\n\n    useEffect(() => {\n        setChild(fig.matrix.map((val, index) => {\n            return(<div className=\"figure-str\" key={index} style={\n                {\n                    marginTop: index !== 0 ? margin : 0,\n                    height: sizeCube,\n                    width: width\n                }\n            }>\n                {val.map((value, idx) => {\n                    return (<div className=\"figure-block\" key={idx} style={{\n                        background: value ? clr : 'transparent',\n                        marginLeft: idx !== 0 ? margin : 0,\n                        marginRight: value.length - 1 === idx ? margin : 0,\n                        width: sizeCube,\n                        height: sizeCube,\n                        boxShadow: value ? '2px 2px 14px rgba(0, 0, 0, 0.5)' : null\n                    }}/>);\n                })}\n            </div>);\n        }));\n    }, [sizeCube, margin, width, height]);\n\n    return(\n        <div className=\"area-figure\" style={style}>\n            {isShow &&\n            <Touch className={\"touch-figure\" + (isTouch ? ' touch-active' : '')}\n                    getRootRef={getRootRef}\n                    onMove={onMove}\n                    onEnd={onEnd}\n                    onStart={onStart}\n                    style={\n                        {\n                            width: width,\n                            height: height,\n                            position: isTouch ? 'fixed' : 'absolute',\n                            transform: isTouch ? `translate(${position[0]}px, ${position[1]}px)` : 'translate(-50%, -50%)',\n                            top: isTouch ? 0 : '50%',\n                            left: isTouch ? 0 : '50%'\n                        }\n                    }>\n                {child}\n            </Touch>}\n        </div>\n    );\n}\n\nexport default GenerateFigure;","import React, {useEffect, useRef, useState} from \"react\";\nimport GenerateFigure from \"../GenerateFigure/GenerateFigure\";\nimport './style.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setMode} from \"../../store/actions/gameAction\";\n\nconst Generator = () => {\n\n    const [sizeCube, setSizeCube] = useState(0);\n    const [margin, setMargin] = useState(0);\n    const [genObject, setGenObject] = useState([]);\n    const index = useSelector(state => state.game.index);\n    const mode = useSelector(state => state.game.mode);\n    const [child, setChild] = useState(null);\n    const ref = useRef();\n    const dispatch = useDispatch();\n\n    const getRandomInt = (max) => {\n        return Math.floor(Math.random() * max);\n    }\n\n    const checkObjectShow = (object) => {\n        let isShow = false;\n        object.forEach((val) => {\n            isShow = isShow || val.isShow;\n        });\n        return isShow;\n    }\n\n    useEffect(() => {\n        let width = ref.current.clientWidth;\n\n        setSizeCube(width * 0.9 / 3);\n        setMargin(width * 0.1 / 4);\n\n        setGenObject([\n            {figure: getRandomInt(16), color: getRandomInt(6), isShow: true},\n            {figure: getRandomInt(16), color: getRandomInt(6), isShow: true},\n            {figure: getRandomInt(16), color: getRandomInt(6), isShow: true},\n        ]);\n    }, []);\n\n    useEffect(() => {\n        console.log('generator',mode, index);\n        if(mode === 'change'){\n            let obj = genObject;\n            obj[index] = {\n                ...obj[index],\n                isShow: false\n            }\n            if(!checkObjectShow(obj)){\n                setGenObject([\n                    {figure: getRandomInt(16), color: getRandomInt(6), isShow: true},\n                    {figure: getRandomInt(16), color: getRandomInt(6), isShow: true},\n                    {figure: getRandomInt(16), color: getRandomInt(6), isShow: true},\n                ]);\n            }else {\n                setGenObject(obj);\n                console.log(obj);\n            }\n            dispatch(setMode('start'));\n        }\n    }, [mode, index]);\n\n\n    return(<div className=\"area-generator\" ref={ref}>\n        {genObject.map((obj, idx) => {\n            if(obj.isShow){\n                return(<GenerateFigure key={idx} index={idx} isShow={obj.isShow} figure={obj.figure} color={obj.color} style={{\n                    width: sizeCube,\n                    height: sizeCube,\n                    marginLeft: margin,\n                    marginRight: obj.length - 1 === idx ? margin : 0,\n                }}/>);\n            }else{\n                return (<div className=\"area-figure\" style={{\n                    width: sizeCube,\n                    height: sizeCube,\n                    marginLeft: margin,\n                    marginRight: obj.length - 1 === idx ? margin : 0,\n                }}/>);\n            }\n        })}\n    </div>);\n};\n\nexport default Generator;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\nimport GamePlacement from \"../components/GamePlacement/GamePlacement\";\nimport Generator from \"../components/Ganarator/Generator\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t<GamePlacement />\n\t\t<Generator/>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\t/*bridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();*/\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={null}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import {CHANGE_POSITION, SET_MODE, SET_POSITION, TOTAL_BLOCK_SIZE} from \"../consts\";\n\nlet start = {\n    size: 0,\n    margin: 0,\n    position: [0, 0],\n    matrix: [],\n    color: '#c4c4c4',\n    mode: 'start',\n    index: -1\n}\n\nexport function gameReducer(current = start, action){\n    switch (action.type){\n        case TOTAL_BLOCK_SIZE:\n            return {\n                ...current,\n                size: action.size,\n                margin: action.margin\n            }\n        case CHANGE_POSITION:\n            return {\n                ...current,\n                position: action.position,\n                matrix: action.matrix,\n                mode: action.mode\n            }\n        case SET_POSITION:\n            return {\n                ...current,\n                position: action.position,\n                matrix: action.matrix,\n                color: action.color,\n                index: action.index,\n                mode: action.mode\n            }\n        case SET_MODE:\n            return {\n                ...current,\n                mode: action.mode\n            }\n        default:\n            return current;\n\n    }\n}","import {combineReducers } from 'redux';\nimport {gameReducer} from \"./gameReducer\";\n\nconst rootReducer = combineReducers({\n    game: gameReducer\n});\n\nexport default rootReducer;","import { createStore } from 'redux';\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport store from './store/store';\n\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(\n    <Provider store={store}><App/></Provider>\n    , document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  //import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}